# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/dry-matcher/all/dry-matcher.rbi
#
# dry-matcher-0.7.0
module Dry
end
class Dry::Matcher
  def call(result, &block); end
  def cases; end
  def initialize(cases = nil); end
  def self.for(*match_methods, with:); end
end
class Dry::Matcher::Case
  def initialize(match:, resolve: nil); end
  def matches?(value, *pattern); end
  def resolve(value); end
end
class Dry::Matcher::NonExhaustiveMatchError < StandardError
end
class Dry::Matcher::Evaluator < BasicObject
  def call; end
  def ensure_exhaustive_match; end
  def handle_case(kase, *pattern); end
  def initialize(result, cases); end
  def method_missing(name, *args, &block); end
  def respond_to_missing?(name, include_private = nil); end
end
